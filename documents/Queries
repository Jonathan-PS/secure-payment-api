-- --------------------------------------------------------

--
-- Table structure for table product
--

DROP TABLE product;


CREATE TABLE product(
    product_id SERIAL PRIMARY KEY,
    product_name varchar(255) UNIQUE NOT NULL, -- UNIQUE makes this table IDEMPOTENT
    description varchar(255) NOT NULL,
    price_each double precision NOT NULL,
    stock int NOT NULL,
    image_url character varying(255),
    is_digital BOOLEAN NOT NULL,
    is_active BOOLEAN NOT NULL
);

select * from product;

-- HELENS SUGGESTIONS --
INSERT INTO product(product_name, description, price_each, stock, image_url, is_digital, is_active)
VALUES
('Mario Kart Racer Socks', 'Do not slip on the banana peels of boring socks, grab this pair and win every time!',100.00, 25, 'http://oi65.tinypic.com/a595bt.jpg', false, true),
('Dexters Laboratory Socks', 'Make your feet stand out from all of the "STUPID" boring socks!',125.00, 32, 'http://oi67.tinypic.com/2a7fkmg.jpg', false, true),
('Zelda Varsity Socks', 'Take your sock game to the next level and join Link in saving Hyrule!',100.00, 54, 'http://oi63.tinypic.com/25s4hf6.jpg', false, true),
('Harry Potter Socks', 'One can never have enough socks', 75.00, 0, 'https://images-na.ssl-images-amazon.com/images/I/61wxldyWmpL._UL1024_.jpg', false, true),
('Sock Background v1', 'Socks on an image', 49.50, 5, 'https://previews.123rf.com/images/lilipom/lilipom1601/lilipom160100037/51937424-seamless-pattern-of-socks-on-a-white-background.jpg', true, true),
('Artwork Hansel and Gretel', '3D artwork featuring the cabin of the witch in Hansel and Gretel', 150.00, 5, 'http://oi67.tinypic.com/30hpr8g.jpg', true, true),
('Artwork Forgotten Teddybear', '3D artwork featuring the a forgotten teddybear in an attic', 150.00, 5, 'http://oi64.tinypic.com/2801w7k.jpg', true, true),
('Artwork War Hammerhead Sharks', '3D artwork featuring two War Hammerhead Sharks', 150.00, 5, 'http://oi65.tinypic.com/10or3ih.jpg', true, true),
('Photo Norwegian Nature - Boat', 'Photo featuring a boat in beautiful Norwegian nature', 100.00, 90, 'http://oi67.tinypic.com/ms2e7b.jpg', true, true),
('Photo Norwegian Nature - Rocks', 'Photo featuring some rocks and water',100.00, 5, 'http://oi66.tinypic.com/1z5kwu8.jpg', true, true);

-- --------------------------------------------------------

--
-- Table structure for table registered_user
--

DROP TABLE registered_user;


CREATE TABLE registered_user
(
    registered_user_id SERIAL PRIMARY KEY,
    first_name varchar(255) NOT NULL,
    last_name varchar(255) NOT NULL,
    email varchar(255) UNIQUE NOT NULL,
    password varchar(255) NOT NULL,
    created_at timestamptz NOT NULL,
    is_active boolean NOT NULL
);

SELECT * FROM registered_user;


INSERT INTO registered_user (email, first_name, last_name, password, created_at, is_active)
VALUES
('ola@nordmann.com',  'Ola', 'Nordmann', crypt('olaola',   gen_salt('md5')), NOW(), true),
('kari@nordmann.com', 'Kari', 'Nordmann',crypt('karikari', gen_salt('md5')), NOW(), true)
;



-- --------------------------------------------------------

--
-- Table structure for table address
--

drop table address;

CREATE TABLE address
(
    address_id SERIAL PRIMARY KEY,
    street_name varchar(255) NOT NULL,
    street_number varchar(255) NOT NULL,
    housing_code varchar(255), -- not NOT NULL :3
    postal_code varchar(255),
    city varchar(255) NOT NULL,
    country varchar(255) NOT NULL,
    registered_user_id bigint NOT NULL REFERENCES registered_user(registered_user_id),
    is_current boolean NOT NULL,
    is_active boolean NOT NULL,
    unique(registered_user_id, street_name, street_number, housing_code, postal_code, city, country, is_active)
);

select * from address;

INSERT INTO address (street_name, street_number, housing_code, postal_code, city, country, is_active, is_current, registered_user_id)
VALUES
('Drammensveien', '1', 'H0101', 0123, 'Oslo', 'Norway', true, true, 1),
('Oslogate',      '3', 'H0203', 8999, 'Bergen', 'Norway', true, true, 2)
;



-- --------------------------------------------------------

--
-- Table structure for table user_order
--

drop table user_order;


CREATE TABLE user_order
(
    user_order_id SERIAL PRIMARY KEY,
    shipping_address varchar(255) NOT NULL,
    order_email varchar(255) NOT NULL,
    shipping_name varchar(255) NOT NULL,
    total_price double precision NOT NULL,
    currency varchar(255) NOT NULL,
    created_at timestamptz NOT NULL,
    updated_at timestamptz NOT NULL,
    status varchar(255) NOT NULL,
    registered_user_id bigint REFERENCES registered_user(registered_user_id),
    is_active boolean NOT NULL
);


select * from user_order;

-- INSERT INTO user_order (shipping_address, order_email, shipping_name, total_price, currency, created_at, updated_at, status, registered_user_id,is_active)
-- VALUES
-- ('Drammensveien 1, H0101, 0123 OSLO, Norway', 'ola@nordmann.com', 'Ola Nordmann', 255, 'nok', NOW(), NOW(), 'completed', 1, true)
-- ;




-- --------------------------------------------------------

--
-- Table structure for table order_product
--

drop table order_product;

CREATE TABLE order_product
(
    order_product_id SERIAL PRIMARY KEY,
    user_order_id bigint NOT NULL references user_order(user_order_id),
    product_id bigint NOT NULL references product(product_id),
    price_each double precision NOT NULL,
    quantity bigint NOT NULL,
    is_active boolean NOT NULL,
    unique (user_order_id, product_id) -- so that an order takes a give product only once. Duplicates are stored as quantity changes

);

select * from order_product;


-- INSERT INTO order_product(user_order_id, product_id, price_each, quantity,is_active)
-- VALUES
-- (1,1,79.99,2,true),
-- (1,2,79.99,2,true)
-- ;




-- --------------------------------------------------------

--
-- Table structure for table stripe_charge_request
--


drop table stripe_charge_request;

CREATE TABLE stripe_charge_request
(
    stripe_charge_request_id SERIAL PRIMARY KEY,
    user_order_id bigint NOT NULL references user_order(user_order_id),

    amount double precision NOT NULL,
    currency varchar(255) NOT NULL,
    receipt_email varchar(255) NOT NULL,
    token  varchar(255) unique NOT NULL, -- UNIQUE makes this table IDEMPOTENT
    description varchar(255),
    last4 varchar(255),
    created_at timestamptz NOT NULL,

    stripe_charge_id varchar(255),
    stripe_status varchar(255),
    receipt_url varchar(255),

    paid BOOLEAN,
    outcome_network_status varchar(255),
    outcome_risk_level varchar(255),
    outcome_risk_score varchar(255),
    outcome_seller_message varchar(255),
    outcome_type varchar(255),

    is_active BOOLEAN NOT NULL
);


select * from stripe_charge_request;

-- INSERT INTO stripe_charge_request(user_order_id, amount, currency, receipt_email, token, created_at, is_active)
-- VALUES
-- (1, 369.46, 'NOK', 'ola@nordmann.com', 'tok_visa', Now(), true);



-- --------------------------------------------------------

--
-- QUERIES TO RETRIEVE LIST OF TABLES PRESENT IN DATABASE
--


SELECT table_name
FROM information_schema.tables
WHERE table_type='BASE TABLE'
AND table_schema='public';

drop TABLE stripe_charge_request,address, order_product, user_order, product, registered_user;