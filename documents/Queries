-- --------------------------------------------------------

--
-- Table structure for table product
--

DROP TABLE product;


CREATE TABLE product(
    product_id SERIAL PRIMARY KEY,
    product_name varchar(255) UNIQUE NOT NULL,
    description varchar(255) NOT NULL,
    price_each double precision NOT NULL,
    stock int NOT NULL,
    image_url character varying(255),
    is_active boolean NOT NULL
);

select * from product;


INSERT INTO product (product_name, description, price_each, stock, image_url, is_active)
VALUES ('Red Socks', 'Nice pair of red socks', 79.99, 10, 'http://sweetclipart.com/multisite/sweetclipart/files/socks_red.png', true),
('White Socks', 'White socks not gonna stay white for long', 79.99, 25, 'http://sweetclipart.com/multisite/sweetclipart/files/socks_outline.png', true),
('Blue Baby Socks', 'Nice pair of blue socks for baby boy', 49.50, 25, 'http://sweetclipart.com/multisite/sweetclipart/files/baby_boy_socks_blue.png', true),
('Yellow Baby Socks', 'Nice pair of yellow socks', 49.50, 25, 'http://sweetclipart.com/multisite/sweetclipart/files/baby_socks_yellow.png', true),
('Pink Baby Socks', 'Nice pair of pink socks for baby girl', 49.50, 25, 'http://sweetclipart.com/multisite/sweetclipart/files/baby_girl_socks_pink.png', true),
('Phintastic Socks', 'The socks to impress all the girls', 249.50, 88, 'https://cdn.shopify.com/s/files/1/0002/4179/5099/products/Phintastic_hero_copy_7_2048x.png?v=1526476988', true);


-- --------------------------------------------------------

--
-- Table structure for table registered_user
--

DROP TABLE registered_user;


CREATE TABLE registered_user
(
    registered_user_id SERIAL PRIMARY KEY,
    first_name varchar(255) NOT NULL,
    last_name varchar(255) NOT NULL,
    email varchar(255) UNIQUE NOT NULL,
    password varchar(255) NOT NULL,
    created_at timestamptz NOT NULL,
    is_active boolean NOT NULL
);

SELECT * FROM registered_user;


INSERT INTO registered_user (email, first_name, last_name, password, created_at, is_active)
VALUES
('ola@nordmann.com', 'Ola', 'Nordmann', 'askeladden', NOW(), true),
('jon.snow@stark.com', 'Jon', 'Snow', 'daenerys', NOW(), true),
('dani@targaryen.com', 'Daenerys', 'Targaryen', 'auntieknowsbest', NOW(), true),
('thehound@clegane.got', 'Sandor', 'Clegane', 'fucktheking', NOW(), true),
('theon@greyjoy.com', 'Theon', 'Greyjoy', 'winterfell', NOW(), true),
('kari@nordmann.com', 'Kari', 'Nordmann', 'pippilangstrompe', NOW(), true)

;




-- --------------------------------------------------------

--
-- Table structure for table address
--

drop table address;

CREATE TABLE address
(
    address_id SERIAL PRIMARY KEY,
    street_name varchar(255) NOT NULL,
    street_number varchar(255) NOT NULL,
    housing_code varchar(255), -- not NOT NULL :3
    postal_code varchar(255),
    city varchar(255) NOT NULL,
    country varchar(255) NOT NULL,
    registered_user_id bigint NOT NULL REFERENCES registered_user(registered_user_id),
    is_current boolean NOT NULL,
    is_active boolean NOT NULL
);

select * from address;

INSERT INTO address (street_name, street_number, housing_code, postal_code, city, country, is_active, is_current, registered_user_id)
VALUES
('Drammensveien', '1', 'H001', "0123", 'OSLO', 'Norway', true, true, 1),
('Keep',          '1', 'H101', "8999", 'Winterfell', 'The North', true, true, 2),
('DS',            '1',  null,  "5541", 'Dragonstone', 'Westcoast', true, true, 3),
('Unknown',       '0',  null,  "0000", 'Unknown', 'Unknown', true, false, 4),
('Cleganes Keep', '1' , null,  "2257", 'Westerlands', 'Westerlands', true, true,  4),
('Pyke',          '1a', null,  "8123", 'Pyke', 'Iron Islands', true, true, 5)
;

-- Foreign key restraint at work:
INSERT INTO address (street_name, street_number, housing_code, postal_code, city, country, is_active, registered_user_id)
VALUES
('Pyke',          '1a', null,  8123, 'Pyke', 'Iron Islands', true, 10001);

select * from address;



-- --------------------------------------------------------

--
-- Table structure for table user_order
--

drop table user_order;


CREATE TABLE user_order
(
    user_order_id SERIAL PRIMARY KEY,
    shipping_address varchar(255) NOT NULL,
    order_email varchar(255) NOT NULL,
    shipping_name varchar(255) NOT NULL,
    created_at timestamptz NOT NULL,
    updated_at timestamptz NOT NULL,
    status varchar(255) NOT NULL,
    registered_user_id bigint REFERENCES registered_user(registered_user_id),
    is_active boolean NOT NULL
);


select * from user_order;

INSERT INTO user_order (shipping_address, order_email, shipping_name, created_at, updated_at, status, registered_user_id,is_active)
VALUES
('Drammensveien 1, H001, 0123 OSLO, Norway', 'ola@nordmann.com', 'Ola Nordmann', NOW(), NOW(), 'completed', 1, true),
('DS 1,  5541 Dragonstone, Crownlands', 'dani@targaryen.com', 'Daenerys Targaryen', NOW(), NOW(), 'in-progress', 3, true),
('Red Keep 1, 0001 Kings Landing, Crownlands', 'robert@king.west', 'Robert Baratheon', NOW(), NOW(), 'failed', null, true),
('Keep of the Iron Islands', 'euron@greyjoy.com', 'Euron Greyjoy', NOW(), NOW(), 'in-progress', null, true),
('Keep 1, H101, 8999 Winterfell, The North', 'jon.snow@stark.com', 'Jon Snow', NOW(), NOW(), 'failed', 2, true),
('Unknown', 'thehound@clegane.com', 'Sandor Clegane', NOW(), NOW(), 'in-progress', 4, true),
('Riverrun', 'thehound@clegane.com', 'Sandor Clegane', NOW(), NOW(), 'completed', 4, true)
;




-- --------------------------------------------------------

--
-- Table structure for table order_product
--

drop table order_product;

CREATE TABLE order_product
(
    order_product_id SERIAL PRIMARY KEY,
    user_order_id bigint NOT NULL references user_order(user_order_id),
    product_id bigint NOT NULL references product(product_id),
    price_each double precision NOT NULL,
    quantity bigint NOT NULL,
    is_active boolean NOT NULL,
    unique (user_order_id, product_id) -- so that an order takes a give product only once. Duplicates are stored as quantity changes

);

select * from order_product;

INSERT INTO order_product(user_order_id, product_id, price_each, quantity,is_active)
VALUES
(1,1,79.99,2,true),
(1,2,79.99,2,true),
(1,3,49.5,1,true),
(2,3,49.5,1,true),
(2,4,49.5,2,true),
(3,4,49.5,2,true),
(4,4,49.5,2,true),
(5,4,49.5,2,true),
(6,6,249.5,2,true),
(6,2,79.99,4,true),
(7,6,249.5,2,true),
(7,4,49.5,2,true);




-- --------------------------------------------------------

--
-- Table structure for table stripe_charge_request
--


drop table stripe_charge_request;

CREATE TABLE stripe_charge_request
(
    stripe_charge_request_id SERIAL PRIMARY KEY,
    user_order_id bigint NOT NULL references user_order(user_order_id),

    amount double precision NOT NULL,
    currency varchar(255) NOT NULL,
    receipt_email varchar(255) NOT NULL,
    token varchar(255) NOT NULL,
    description varchar(255),
    last4 varchar(255),
    created_at timestamptz NOT NULL,

    stripe_charge_id varchar(255),
    stripe_status varchar(255),
    receipt_url varchar(255),

    paid BOOLEAN,
    outcome_network_status varchar(255),
    outcome_risk_level varchar(255),
    outcome_risk_score varchar(255),
    outcome_seller_message varchar(255),
    outcome_type varchar(255),

    is_active BOOLEAN NOT NULL
);


select * from stripe_charge_request;

INSERT INTO stripe_charge_request(user_order_id, amount, currency, receipt_email, token, is_active)
VALUES
(1, 369.46, 'NOK', 'ola@nordmann.com', 'tok_visa', true),
(2, 148.5, 'NOK', 'dani@targaryen.com', 'tok_visa', true);



-- --------------------------------------------------------

--
-- QUERIES TO RETRIEVE LIST OF TABLES PRESENT IN DATABASE
--


SELECT table_name
FROM information_schema.tables
WHERE table_type='BASE TABLE'
AND table_schema='public';

drop TABLE stripe_charge_request,address, order_product, user_order, product, registered_user;
